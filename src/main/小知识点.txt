1.表达式竟然有值 (a = b = 2) == 2 为true
2.idea 展示uml图 ctrl + alt +u 右键可显示方法成员变量等 可以更改layout及自适应 可导出等功能
3.idea 调试技巧  含多线程 单步反方向等 http://www.cnblogs.com/yjmyzz/p/idea-advanced-debug-tips.html mark下
4.设计模式六大原则之一 一：单一职责原则(SRP) 就一个类而言，应该仅有一个引起它变化的原因。”也就是说，
    不要把变化原因各不相同的职责放在一起，因为不同的变化会影响到不相干的职责。
    再通俗一点地说就是，不该你管的事情你不要管，管好自己的事情就可以了，多管闲事害了自己
    也害了别人摘自http://www.cnblogs.com/sevenyuan/archive/2010/03/05/1678730.html
5.设计模式六大原则之一 开闭原则  软件实体如类，模块和方法的设计应该对 扩展开放
6.有感: 知识就是不断重复，不断认识和理解的过程,最重要要有输出(总结和分享)。
7.设计模式6大原则 介绍 https://blog.csdn.net/zhengzhb/article/details/7296944
8.设计模式六大原则之一 二：里氏替换原则 官方定义为 程序P中 T1类型的对象o1 被T2 类型的对象o2替换，程序执行的行为没有任何变化，则o2为o1的子类
    即所有引用父类的地方都能透明的使用其子类（替换）。
    通俗的讲：子类可以扩展父类的功能，但不能改变父类原有的功能 即 子类在继承父类时，不能覆盖父类方法，但是可以扩展自己的特有方法。
9.设计模式六大原则之一 三：依赖倒置原则 定义高层模块不应该依赖低层模块(我的理解应该是具体的类)，
    二者都应该依赖其抽象(依赖接口)；抽象不应该依赖细节(接口中不能出现具体子类)；细节应该依赖抽象。
    核心就是 面向接口编程 通过接口的多实现实现解耦
10.设计模式六大原则之一 四：接口隔离原则 我的理解就是接口不能设计太臃肿，某些的接口对于部分实现类并不必要，
    应该适度拆分为多个接口，细粒度划分接口，这样子类也就不会太臃肿，如在定义通用service接口时就可能会出现这种情况。
11.适配器模式 理解 电源接口，国产的为220v ，系统内所有电器都为220v，但现在出现一只美国的电器（110v），需要一个模块输入110v
正巧系统内还有个东西叫小型变压器，需要一个转接头，这个转接头就是适配器adapter，适配器相当于一个容器，使用小型变压器有这个变110v的功能，
对整个系统而言，输入这个适配器为220v，对于这个美国货而言输入则为110v